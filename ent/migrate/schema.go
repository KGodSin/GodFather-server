// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ApprovalInformationsColumns holds the columns for the "approval_informations" table.
	ApprovalInformationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"approved", "not_approved"}, Default: "not_approved"},
		{Name: "approval_date", Type: field.TypeTime},
		{Name: "count", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeString},
		{Name: "product_id", Type: field.TypeString},
		{Name: "registered_at", Type: field.TypeTime},
		{Name: "product_approval_informations", Type: field.TypeInt, Nullable: true},
		{Name: "user_approval_informations", Type: field.TypeInt, Nullable: true},
	}
	// ApprovalInformationsTable holds the schema information for the "approval_informations" table.
	ApprovalInformationsTable = &schema.Table{
		Name:       "approval_informations",
		Columns:    ApprovalInformationsColumns,
		PrimaryKey: []*schema.Column{ApprovalInformationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "approval_informations_products_approval_informations",
				Columns:    []*schema.Column{ApprovalInformationsColumns[7]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "approval_informations_users_approval_informations",
				Columns:    []*schema.Column{ApprovalInformationsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "registered_at", Type: field.TypeTime},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:        "products",
		Columns:     ProductsColumns,
		PrimaryKey:  []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ProductOrdersColumns holds the columns for the "product_orders" table.
	ProductOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "price", Type: field.TypeInt},
		{Name: "count", Type: field.TypeInt},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "registered_at", Type: field.TypeTime},
		{Name: "product_product_orders", Type: field.TypeInt, Nullable: true},
	}
	// ProductOrdersTable holds the schema information for the "product_orders" table.
	ProductOrdersTable = &schema.Table{
		Name:       "product_orders",
		Columns:    ProductOrdersColumns,
		PrimaryKey: []*schema.Column{ProductOrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_orders_products_product_orders",
				Columns:    []*schema.Column{ProductOrdersColumns[7]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "user"}, Default: "user"},
		{Name: "registered_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ApprovalInformationsTable,
		ProductsTable,
		ProductOrdersTable,
		UsersTable,
	}
)

func init() {
	ApprovalInformationsTable.ForeignKeys[0].RefTable = ProductsTable
	ApprovalInformationsTable.ForeignKeys[1].RefTable = UsersTable
	ProductOrdersTable.ForeignKeys[0].RefTable = ProductsTable
}
